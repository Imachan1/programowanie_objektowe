using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace praca
{
    internal class Program
    {
        public class Shape
        {
            public virtual float CalculateArea()
            {
                return 0;
            }
            public virtual float CalculatePerimeter()
            {
                return 0;
            }
        }
        public class Rectrangle : Shape
        {
            private float width;
            private float height;

            public void SetDimention(float w, float h)
            {
                width = w;
                height = h;
            }

            public override float CalculateArea()
            {
                //return base.CalculateArea();
                return width * height;
            }
            public override float CalculatePerimeter()
            {
                return 2 * (width + height);
            }
        }
        public class Circle : Shape
        {
            private float radius;

            public void SetRadius(float r)
            {
                radius = r;
            }

            public override float CalculateArea()
            {
                return (float)(Math.PI * radius * radius);
            }
            public override float CalculatePerimeter()
            {
                return (float)(2 * Math.PI * radius);
            }
        }
        public class Triangle : Shape
        {
            private float podstawa;
            private float strona2;
            private float strona3;


            public void SetAngle(float a, float b, float c)
            {
                podstawa = a;
                strona2 = b;
                strona3 = c;

            }
            public override float CalculateArea()
            {
                return (float)(0.25 * Math.Sqrt((podstawa + strona2 + strona3) * ((-1 * podstawa) + strona2 + strona3) * (podstawa - strona2 + strona3) * (podstawa + strona2 - strona3)));
                //pole = 0,25 ∙ √( (a + b + c) ∙ (-a + b + c) ∙ (a - b + c) ∙ (a + b - c) )
            }
            public override float CalculatePerimeter()
            {
                return (float)(podstawa + strona2 + strona3);
            }
        }
        public class Trapezoid : Shape
        {
            private float a;
            private float b;
            private float c;
            private float d;

            public void SetTrapezoid(float strona1, float strona2, float strona3, float strona4)
            {
                a = strona1;
                b = strona2;
                c = strona3;
                d = strona4;

            }
            public override float CalculateArea()
            {
                return (float)((a + b) / 2 * Math.Sqrt((a + b) * (a + b) - (c - d) * (c - d)));
            }
            public override float CalculatePerimeter()
            {
                return (float)(a + b + c + d);
            }
        }
        public class Ball:Shape
        {
            private float r;

            public void SetBall(float promien)
            {
                r = promien;
            }

            public override float CalculateArea()
            {
                return (float)((4 / 3) * Math.PI * Math.Pow(r,3));
            }
            public override float CalculatePerimeter()
            {
                return (float)(2*Math.PI*r);
            }
        }
        static void Main(string[] args)
        {
            while (true)
            {
                Console.WriteLine("1.Prostokąt");
                Console.WriteLine("2.Kolo");
                Console.WriteLine("3.Trójkąt");
                Console.WriteLine("4.Trapez");
                Console.WriteLine("5.Kula");
                Console.WriteLine("6.Wyjście");
                Console.WriteLine("Wybierz ksztalt do obliczenia");

                int choise = int.Parse(Console.ReadLine());

                switch (choise)
                {
                    case 1:
                        Rectrangle rect = new Rectrangle();
                        Console.WriteLine("Podaj szerokosc");
                        float RectWidth = float.Parse(Console.ReadLine());
                        Console.WriteLine("Podaj wysokosc");
                        float RectHeight = float.Parse(Console.ReadLine());
                        rect.SetDimention(RectWidth, RectHeight);
                        Console.WriteLine("Obwód prostokata: {0}", rect.CalculatePerimeter());
                        Console.WriteLine("Powierzchnia prostokata: {0}", rect.CalculateArea());
                        break;
                    case 2:
                        Circle circ = new Circle();
                        Console.WriteLine("Podaj radius");
                        float CircleR = float.Parse(Console.ReadLine());
                        circ.SetRadius(CircleR);
                        Console.WriteLine("Obwód kola: {0}", circ.CalculatePerimeter());
                        Console.WriteLine("Pole kola: {0}", circ.CalculateArea());
                        break;
                    case 3:
                        Triangle trial = new Triangle();
                        Console.WriteLine("Podaj podstawę");
                        float TrianglePodstawa = float.Parse(Console.ReadLine());
                        Console.WriteLine("Podaj strone b");
                        float TriangleB = float.Parse(Console.ReadLine());
                        Console.WriteLine("Podaj strone c");
                        float TriangleC = float.Parse(Console.ReadLine());
                        //Console.WriteLine("Podaj wysokosc");
                        //float TriangleH = float.Parse(Console.ReadLine());
                        trial.SetAngle(TrianglePodstawa, TriangleB, TriangleC);
                        Console.WriteLine("Obwód prostokata: {0}", trial.CalculatePerimeter());
                        Console.WriteLine("Powierzchnia prostokata: {0}", trial.CalculateArea());
                        break;
                    case 4:
                        Trapezoid trapez = new Trapezoid();
                        Console.WriteLine("Podaj strone a (podztawa): ");
                        float TrapezA = float.Parse(Console.ReadLine());
                        Console.WriteLine("Podaj strone b (podstawa(gora)): ");
                        float TrapezB = float.Parse(Console.ReadLine());
                        Console.WriteLine("Podaj strone c (bok): ");
                        float TrapezC = float.Parse(Console.ReadLine());
                        Console.WriteLine("Podaj strone d (bok 2): ");
                        float TrapezD = float.Parse(Console.ReadLine());
                        trapez.SetTrapezoid(TrapezA, TrapezB, TrapezC, TrapezD);
                        Console.WriteLine("Obwód prostokata: {0}", trapez.CalculatePerimeter());
                        Console.WriteLine("Powierzchnia prostokata: {0}", trapez.CalculateArea());
                        break;
                    case 5:
                        Ball bA = new Ball();
                        Console.WriteLine("Podaj promien(r): ");
                        float BallPromien = float.Parse(Console.ReadLine());
                        bA.SetBall(BallPromien);
                        Console.WriteLine("Obwód kuli: {0}", bA.CalculatePerimeter());
                        Console.WriteLine("Objętosc kuli: {0}", bA.CalculateArea());
                        break;
                    case 6:
                        return;
                    default:
                        Console.WriteLine("Nieprawidlowy wybór");
                        break;
                }
            }
        }
    }
}
